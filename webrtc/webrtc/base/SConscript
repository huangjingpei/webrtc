Import('*')

_env = env.Clone()
_env.Append(CPPFLAGS = ' ')

_env.Append(CPPPATH = ['#.', '#webrtc'])
_env.Append(LIBPATH = 'lib')
_env['LIBS'] = ['c', 'rt', 'dl']
_env.Append(CPPFLAGS= '-D__STDC_FORMAT_MACROS')

totalSources = [
    'array_view.h',
    'atomicops.h',
    'bitbuffer.cc',
    'bitbuffer.h',
    'buffer.cc',
    'buffer.h',
    'bufferqueue.cc',
    'bufferqueue.h',
    'bytebuffer.cc',
    'bytebuffer.h',
    'byteorder.h',
    'checks.cc',
    'checks.h',
    'constructormagic.h',
    'criticalsection.cc',
    'criticalsection.h',
    'deprecation.h',
    'event.cc',
    'event.h',
    'event_tracer.cc',
    'event_tracer.h',
    'exp_filter.cc',
    'exp_filter.h',
    'logging.cc',
    'logging.h',
    'md5.cc',
    'md5.h',
    'md5digest.cc',
    'md5digest.h',
    'optional.h',
    'platform_file.cc',
    'platform_file.h',
    'platform_thread.cc',
    'platform_thread.h',
    'platform_thread_types.h',
    'random.cc',
    'random.h',
    'rate_statistics.cc',
    'rate_statistics.h',
    'ratetracker.cc',
    'ratetracker.h',
    'refcount.h',
    'safe_conversions.h',
    'safe_conversions_impl.h',
    'scoped_ptr.h',
    'scoped_ref_ptr.h',
    'stringencode.cc',
    'stringencode.h',
    'stringutils.cc',
    'stringutils.h',
    'systeminfo.cc',
    'systeminfo.h',
    'template_util.h',
    'thread_annotations.h',
    'thread_checker.h',
    'thread_checker_impl.cc',
    'thread_checker_impl.h',
    'timeutils.cc',
    'timeutils.h',
    'trace_event.h',
    'arraysize.h',
    'asyncfile.cc',
    'asyncfile.h',
    'asyncinvoker.cc',
    'asyncinvoker.h',
    'asyncinvoker-inl.h',
    'asyncpacketsocket.cc',
    'asyncpacketsocket.h',
    'asyncresolverinterface.cc',
    'asyncresolverinterface.h',
    'asyncsocket.cc',
    'asyncsocket.h',
    'asynctcpsocket.cc',
    'asynctcpsocket.h',
    'asyncudpsocket.cc',
    'asyncudpsocket.h',
    'autodetectproxy.cc',
    'autodetectproxy.h',
    'bandwidthsmoother.cc',
    'bandwidthsmoother.h',
    'base64.cc',
    'base64.h',
    'bind.h',
    'callback.h',
    'common.cc',
    'common.h',
    'copyonwritebuffer.cc',
    'copyonwritebuffer.h',
    'crc32.cc',
    'crc32.h',
    'cryptstring.cc',
    'cryptstring.h',
    'dbus.cc',
    'dbus.h',
    'diskcache.cc',
    'diskcache.h',
    'filerotatingstream.cc',
    'filerotatingstream.h',
    'fileutils.cc',
    'fileutils.h',
    'fileutils_mock.h',
    'firewallsocketserver.cc',
    'firewallsocketserver.h',
    'flags.cc',
    'flags.h',
    'format_macros.h',
    'gunit_prod.h',
    'helpers.cc',
    'helpers.h',
    'httpbase.cc',
    'httpbase.h',
    'httpclient.cc',
    'httpclient.h',
    'httpcommon-inl.h',
    'httpcommon.cc',
    'httpcommon.h',
    'httprequest.cc',
    'httprequest.h',
    'httpserver.cc',
    'httpserver.h',
    'ifaddrs-android.cc',
    'ifaddrs-android.h',
    'ifaddrs_converter.cc',
    'ifaddrs_converter.h',
    'ipaddress.cc',
    'ipaddress.h',

    'latebindingsymboltable.cc',
    'latebindingsymboltable.h',
    'libdbusglibsymboltable.cc',
    'libdbusglibsymboltable.h',
    'linux.cc',
    'linux.h',
    'linuxfdwalk.c',
    'linuxfdwalk.h',
    'linked_ptr.h',
    'logsinks.cc',
    'logsinks.h',
    'mathutils.h',
    'messagedigest.cc',
    'messagedigest.h',
    'messagehandler.cc',
    'messagehandler.h',
    'messagequeue.cc',
    'messagequeue.h',
    'multipart.cc',
    'multipart.h',
    'natserver.cc',
    'natserver.h',
    'natsocketfactory.cc',
    'natsocketfactory.h',
    'nattypes.cc',
    'nattypes.h',
    'nethelpers.cc',
    'nethelpers.h',
    'network.cc',
    'network.h',
    'networkmonitor.cc',
    'networkmonitor.h',
    'nullsocketserver.h',
    'openssl.h',
    'openssladapter.cc',
    'openssladapter.h',
    'openssldigest.cc',
    'openssldigest.h',
    'opensslidentity.cc',
    'opensslidentity.h',
    'opensslstreamadapter.cc',
    'opensslstreamadapter.h',
    'optionsfile.cc',
    'optionsfile.h',
    'pathutils.cc',
    'pathutils.h',
    'physicalsocketserver.cc',
    'physicalsocketserver.h',
    'posix.cc',
    'posix.h',
    'profiler.cc',
    'profiler.h',
    'proxydetect.cc',
    'proxydetect.h',
    'proxyinfo.cc',
    'proxyinfo.h',
    'proxyserver.cc',
    'proxyserver.h',
    'ratelimiter.cc',
    'ratelimiter.h',
    'referencecountedsingletonfactory.h',
    'rollingaccumulator.h',
    'rtccertificate.cc',
    'rtccertificate.h',
    'scoped_autorelease_pool.h',
    'scopedptrcollection.h',
    'sec_buffer.h',
    'sha1.cc',
    'sha1.h',
    'sha1digest.cc',
    'sha1digest.h',
    'sharedexclusivelock.cc',
    'sharedexclusivelock.h',
    'signalthread.cc',
    'signalthread.h',
    'sigslot.cc',
    'sigslot.h',
    'sigslotrepeater.h',
    'socket.h',
    'socketadapters.cc',
    'socketadapters.h',
    'socketaddress.cc',
    'socketaddress.h',
    'socketaddresspair.cc',
    'socketaddresspair.h',
    'socketfactory.h',
    'socketpool.cc',
    'socketpool.h',
    'socketserver.h',
    'socketstream.cc',
    'socketstream.h',
    #'json.cc',
    #'ssladapter.cc',
    #'ssladapter.h',
    #'sslconfig.h',
    #'sslfingerprint.cc',
    #'sslfingerprint.h',
    #'sslidentity.cc',
    #'sslidentity.h',
    #'sslroots.h',
    #'sslsocketfactory.cc',
    #'sslsocketfactory.h',
    #'sslstreamadapter.cc',
    #'sslstreamadapter.h',
    #'sslstreamadapterhelper.cc',
    #'sslstreamadapterhelper.h',
    'stream.cc',
    'stream.h',
    'task.cc',
    'task.h',
    'taskparent.cc',
    'taskparent.h',
    'taskrunner.cc',
    'taskrunner.h',
    'testclient.cc',
    'testclient.h',
    'thread.cc',
    'thread.h',
    'timing.cc',
    'timing.h',
    'transformadapter.cc',
    'transformadapter.h',
    'unixfilesystem.cc',
    'unixfilesystem.h',
    'urlencode.cc',
    'urlencode.h',
    'versionparsing.cc',
    'versionparsing.h',
    'virtualsocketserver.cc',
    'virtualsocketserver.h',
    'window.h',
    'windowpicker.h',
    'windowpickerfactory.h',
    'worker.cc',
    'worker.h',
    'x11windowpicker.cc',
    'x11windowpicker.h',
  ]



_myName='libgsv_base'
objs = totalSources
target = _env.StaticLibrary(_myName + '.a', objs, _LIBFLAGS=' -Wl,-Bsymbolic')
objs.append(target)


Return('target')
